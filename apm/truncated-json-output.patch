--- a/src/featured.coffee
+++ b/src/featured.coffee
@@ -62,7 +62,7 @@
       return callback(error) if error?
 
       if options.argv.json
-        console.log(JSON.stringify(packages))
+        process.stdout.write JSON.stringify(packages) + '\n', callback
       else
         if options.argv.themes
           console.log "#{'Featured Atom Themes'.cyan} (#{packages.length})"
@@ -79,7 +79,7 @@
         console.log "Use `apm install` to install them or visit #{'http://atom.io/packages'.underline} to read more about them."
         console.log()
 
-      callback()
+        callback()
 
     if options.argv.themes
       @getFeaturedPackagesByType(options.argv.compatible, 'themes', listCallback)
--- a/src/install.coffee
+++ b/src/install.coffee
@@ -658,5 +658,7 @@
       installedPackagesInfo = _.compact(installedPackagesInfo)
       installedPackagesInfo = installedPackagesInfo.filter (item, idx) ->
         packageNames[idx] isnt "."
-      console.log(JSON.stringify(installedPackagesInfo, null, "  ")) if options.argv.json
-      callback(null)
+      if options.argv.json
+        process.stdout.write JSON.stringify(installedPackagesInfo, null, "  ") + '\n', callback
+      else
+        callback(null)
--- a/src/list.coffee
+++ b/src/list.coffee
@@ -166,8 +166,7 @@
           @listGitPackages options, (error, packages) ->
             return callback(error) if error
             output.git = packages
-            console.log JSON.stringify(output)
-            callback()
+            process.stdout.write JSON.stringify(output) + '\n', callback
 
   run: (options) ->
     {callback} = options
--- a/src/search.coffee
+++ b/src/search.coffee
@@ -69,7 +69,7 @@
         return
 
       if options.argv.json
-        console.log(JSON.stringify(packages))
+        process.stdout.write JSON.stringify(packages) + '\n', callback
       else
         heading = "Search Results For '#{query}'".cyan
         console.log "#{heading} (#{packages.length})"
@@ -84,4 +84,4 @@
         console.log "Use `apm install` to install them or visit #{'http://atom.io/packages'.underline} to read more about them."
         console.log()
 
-      callback()
+        callback()
--- a/src/stars.coffee
+++ b/src/stars.coffee
@@ -64,8 +64,7 @@
     new Install().run({commandArgs, callback})
 
   logPackagesAsJson: (packages, callback) ->
-    console.log(JSON.stringify(packages))
-    callback()
+    process.stdout.write JSON.stringify(packages) + '\n', callback
 
   logPackagesAsText: (user, packagesAreThemes, packages, callback) ->
     userLabel = user ? 'you'
--- a/src/upgrade.coffee
+++ b/src/upgrade.coffee
@@ -179,12 +179,30 @@
     @getAvailableUpdates packages, (error, updates) =>
       return callback(error) if error?
 
+      installIfPrompted = =>
+        return callback() if options.command is 'outdated'
+        return callback() if options.argv.list
+        return callback() if updates.length is 0
+
+        console.log()
+        if options.argv.confirm
+          @promptForConfirmation (error, confirmed) =>
+            return callback(error) if error?
+
+            if confirmed
+              console.log()
+              @installUpdates(updates, callback)
+            else
+              callback()
+        else
+          @installUpdates(updates, callback)
+
       if options.argv.json
         packagesWithLatestVersionOrSha = updates.map ({pack, latestVersion, sha}) ->
           pack.latestVersion = latestVersion if latestVersion
           pack.latestSha = sha if sha
           pack
-        console.log JSON.stringify(packagesWithLatestVersionOrSha)
+        process.stdout.write JSON.stringify(packagesWithLatestVersionOrSha) + '\n', installIfPrompted
       else
         console.log "Package Updates Available".cyan + " (#{updates.length})"
         tree updates, ({pack, latestVersion, sha}) ->
@@ -198,20 +216,4 @@
             latestVersion = latestVersion.green
           latestVersion = latestVersion?.green or apmInstallSource?.sha?.green
           "#{name} #{version} -> #{latestVersion}"
-
-      return callback() if options.command is 'outdated'
-      return callback() if options.argv.list
-      return callback() if updates.length is 0
-
-      console.log()
-      if options.argv.confirm
-        @promptForConfirmation (error, confirmed) =>
-          return callback(error) if error?
-
-          if confirmed
-            console.log()
-            @installUpdates(updates, callback)
-          else
-            callback()
-      else
-        @installUpdates(updates, callback)
+        installIfPrompted()
