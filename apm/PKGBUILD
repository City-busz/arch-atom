# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=nodejs-atom-package-manager
pkgver=1.10.0
pkgrel=4
pkgdesc='Atom package manager'
arch=('i686' 'x86_64')
url='https://github.com/atom/apm'
license=('MIT')
groups=('atom')
depends=('libgnome-keyring' 'nodejs' 'python2')
makedepends=('git' 'npm')
options=(!emptydirs)
source=("https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js')
sha256sums=('351eba2142d8d79350d3815fd0343fc7b16fd83588ba95793cb32e2e22a9d21c'
            '0eb50358109c7acb4f750ce278323c1d5b86baea5841d5166cf4342a3edf2898')

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd}
  rm src/cli.coffee
  install -m755 ${srcdir}/apm.js bin/apm

  # Don't download binary Node
  sed -e '/"install": "node .\/script\/download-node.js",/d' -i package.json
  rm script/download-node.js
}

build() {
  cd apm-${pkgver}

  npm install --only=dev
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  _apmdir='/usr/lib/node_modules/atom-package-manager'

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff and use python2
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src" -prune -exec rm -r '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \; \
      -or -name "*.py" -exec \
          sed -e 's|^#!/usr/bin/env python$|#!/usr/bin/python2|' -i '{}' \; \
      -or -path "*/gyp/gyp" \
          -exec sed -e 's|exec python |exec python2 |' -i '{}' \;
}
