# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=apm
pkgver=1.12.3
pkgrel=1
pkgdesc='Atom package manager'
arch=('i686' 'x86_64')
url='https://github.com/atom/apm'
license=('MIT')
depends=('libgnome-keyring' 'npm' 'python2')
makedepends=('coffee-script' 'git')
provides=('nodejs-atom-package-manager')
conflicts=('nodejs-atom-package-manager')
replaces=('nodejs-atom-package-manager')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js'
        'no-scripts.patch'
        'use-system-node-gyp.patch')
sha256sums=('d582c1ce98e2f701f38d67303255cba4f911cfcc6f3642f1faaa0ea58e553338'
            '0eb50358109c7acb4f750ce278323c1d5b86baea5841d5166cf4342a3edf2898'
            '75365e0a9d0ddb36aa97e8a8b729f7bd229481bef1f324f98db3baf4f7746a90'
            'ce5cc7f84a1dad9ee773bc8c20ea6498463013cadf81cf0494150b24992dd93e')

_apmdir='/usr/lib/node_modules/atom-package-manager'

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd} bin/npm{,.cmd}
  rm src/cli.coffee
  install -m755 "${srcdir}"/apm.js bin/apm

  # Don't download binary Node
  patch -Np1 -i "${srcdir}"/no-scripts.patch
  rm BUNDLED_NODE_VERSION script/*

  # Use system node-gyp
  patch -Np1 -i ../use-system-node-gyp.patch
}

build() {
  cd apm-${pkgver}

  coffee -c --no-header -o lib src/*.coffee
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr

  cd "${srcdir}/apm-build${_apmdir}"

  # Use system npm
  npm uninstall npm

  npm dedupe
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src" -prune -exec rm -r '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "appveyor.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
}
