# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=atom
pkgver=1.5.2
pkgrel=1
pkgdesc='A hackable text editor for the 21st Century'
arch=('i686' 'x86_64')
url='https://github.com/atom/atom'
license=('MIT' 'custom')
depends=('desktop-file-utils'
         'electron'
         'nodejs-atom-package-manager')
makedepends=('npm')
conflicts=('atom-editor' 'atom-editor-bin' 'atom-editor-git')
install='atom.install'
source=("https://github.com/atom/atom/archive/v${pkgver}.tar.gz"
        'fix-atom-sh.patch'
        'fix-license-path.patch'
        'use-system-apm.patch'
        'use-system-electron.patch')
sha256sums=('1143189accbb7dc09fb045e739eb5ba41f6a7563da89baa62d785b70da53798b'
            'b541b563513d825f6085d97d07379b7909fbef482e4a384de02db8e46fcec836'
            '9ac97587c623ced345587c6d7d3ee9d19e3f383597583794e36d5b9faf78f385'
            '3e9646e588e46f456841edd0fc6daf7e09913be1e049b4e3ce920522e6ecc824'
            'd440b0561dec6411d95337407162b664af571042fd9a9057dd6b3c791d9c822a')

prepare() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  patch -Np1 -i "${srcdir}"/fix-atom-sh.patch
  patch -Np1 -i "${srcdir}"/use-system-electron.patch
  patch -Np1 -i "${srcdir}"/use-system-apm.patch
  patch -Np1 -i "${srcdir}"/fix-license-path.patch

  # apm with system (updated) nodejs cannot 'require' modules inside asar
  sed -e "s/, 'generate-asar'//" -i build/Gruntfile.coffee
}

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  export ATOM_RESOURCE_PATH="$srcdir/atom-$pkgver"
  # If unset, ~/.atom/.node-gyp/.atom/.npm is used
  export NPM_CONFIG_CACHE="${HOME}/.atom/.npm"
  apm clean
  apm install
  _packagesToDedupe=('abbrev'
                     'amdefine'
                     'atom-space-pen-views'
                     'cheerio'
                     'domelementtype'
                     'fs-plus'
                     'grim'
                     'highlights'
                     'humanize-plus'
                     'iconv-lite'
                     'inherits'
                     'loophole'
                     'oniguruma'
                     'q'
                     'request'
                     'rimraf'
                     'roaster'
                     'season'
                     'sigmund'
                     'semver'
                     'through'
                     'temp')
  apm dedupe ${_packagesToDedupe[@]}
  cd build
  npm install
  cd ..
  script/grunt --build-dir="${srcdir}/atom-build" --channel=stable
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  install -d -m 755 "${pkgdir}"/usr/lib
  cp -r "${srcdir}"/atom-build/Atom/resources/app "${pkgdir}"/usr/lib
  mv "${pkgdir}"/usr/lib/app "${pkgdir}"/usr/lib/atom

  install -d -m 755 "${pkgdir}/usr/share/applications"
  sed -e "s|<%= appName %>|Atom|" \
      -e "s/<%= description %>/${pkgdesc}/" \
      -e "s|<%= installDir %>/share/<%= appFileName %>/atom|/usr/lib/electron/electron --app=/usr/lib/atom|" \
      -e "s|<%= iconPath %>|/usr/lib/atom/resources/atom.png|" \
      resources/linux/atom.desktop.in > "${pkgdir}/usr/share/applications/atom.desktop"

  install -D -m 755 "${srcdir}"/atom-build/Atom/resources/new-app/atom.sh \
          "${pkgdir}/usr/bin/atom"

  install -D -m 755 "${srcdir}"/atom-build/Atom/resources/LICENSE.md \
          "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.md"

  # Remove useless stuff
  find "${pkgdir}"/usr/lib/atom/node_modules \
      -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -path "*/less/gradle" -prune -exec rm -r '{}' \; \
      -or -path "*/task-lists/src" -prune -exec rm -r '{}' \;
}
